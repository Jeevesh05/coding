LeetCode:

SQL:
Easy:
610:
SELECT *
        ,CASE 
            WHEN x + y > z
            AND y + z > x
            AND z + x > y
                THEN 'Yes'
            ELSE 'No'
        END AS triangle 
FROM Triangle
WHERE 1 = 1


619:
SELECT MAX(num) AS num
FROM
(
	SELECT num AS num
	FROM MyNumbers
	WHERE 1 = 1
	GROUP BY num
	HAVING COUNT(num) = 1
) R
WHERE 1 = 1


1141:
SELECT activity_date AS [day]
	,COUNT(DISTINCT user_id) AS active_users
FROM Activity
WHERE activity_date BETWEEN DATEADD(DAY, -29, '2019-07-27') AND '2019-07-27'
GROUP BY activity_date


1757:
SELECT product_id
FROM products
WHERE 1 = 1
AND low_fats = 'Y'
AND recyclable = 'Y';


Medium:
180:
SELECT DISTINCT l1.Num ConsecutiveNums 
FROM Logs l1
LEFT JOIN Logs l2
    ON l1.ID = l2.Id - 1
LEFT JOIN Logs l3
    ON l2.ID = l3.ID - 1
WHERE l1.Num = l2.Num
AND l2.Num = l3.Num


1045:
SELECT customer_id
FROM Customer
GROUP BY customer_id
HAVING COUNT(DISTINCT product_key) = (SELECT COUNT(product_key) FROM Product)


1193:
SELECT LEFT(trans_date, 7) AS [month]
        ,country
        ,COUNT(id) AS trans_count
        ,SUM(CASE WHEN state='approved' THEN 1 ELSE 0 END) AS approved_count
        ,SUM(amount) AS trans_total_amount 
        ,SUM(CASE WHEN state='approved' THEN amount ELSE 0 END) AS approved_total_amount  
FROM transactions
WHERE 1 = 1
GROUP BY LEFT(trans_date, 7)
        ,country
ORDER BY 1, 2


1934:
SELECT s.user_id
    ,ROUND(CONVERT(FLOAT, (SUM(CASE WHEN c.action = 'confirmed' THEN 1 ELSE 0 END))) / CONVERT(FLOAT, ISNULL(NULLIF(COUNT(c.action), 0), 1)), 2) AS confirmation_rate 
FROM Signups s
LEFT JOIN Confirmations c
    ON s.user_id = c.user_id
GROUP BY s.user_id






